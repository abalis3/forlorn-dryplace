name: Build and Release

on:
  push:
    branches: [ master ]

jobs:

  build-server:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout commit code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Grab or Build Vcpkg Deps
      uses: lukka/run-vcpkg@v10.7
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: '**/vcpkg.json'
        runVcpkgInstall: true
      env:
        VCPKG_INSTALLED_DIR: vcpkg_installed/
    - name: Build executable
      run: ./linux-build.sh
      working-directory: ./server
    - name: Archive the image
      run: docker save -o server-container-img.tar abalis3/forbidden-desert-server:local
    - name: Upload image as build artifact
      uses: actions/upload-artifact@v2
      with:
        name: server-container
        path: server-container-img.tar

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout commit code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Package Manager Deps
      run: ./scripts/installLinuxDependencies.sh
    - name: Grab or Build Vcpkg Deps
      uses: lukka/run-vcpkg@v10.7
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: '**/vcpkg.json'
        runVcpkgInstall: true
      env:
        VCPKG_INSTALLED_DIR: vcpkg_installed/
    - name: Build executable
      run: ./linux-build.sh
      working-directory: ./client
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-executable
        path: client/bin/forbidden-desert

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout commit code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Grab or Build Vcpkg Deps
      uses: lukka/run-vcpkg@v10.7
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: '**/vcpkg.json'
        runVcpkgInstall: true
      env:
        VCPKG_INSTALLED_DIR: vcpkg_installed/
    - name: Build executable
      run: ./mac-build.sh
      working-directory: ./client
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v2
      with:
        name: macOS-executable
        path: client/bin/forbidden-desert

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout commit code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1
    - name: Grab or Build Vcpkg Deps
      uses: lukka/run-vcpkg@v10.7
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: '**/vcpkg.json'
        runVcpkgInstall: true
      env:
        VCPKG_INSTALLED_DIR: vcpkg_installed/
        VCPKG_DEFAULT_TRIPLET: x86-windows
    - name: Build executable
      run: ./win-build.bat
      working-directory: ./client
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-build
        path: client/bin/*


  release:
    runs-on: ubuntu-latest
    needs:
      - build-server
      - build-linux
      - build-macos
      - build-windows

    steps:
    - name: Checkout commit code
      uses: actions/checkout@v2
    - name: Download server container artifact
      uses: actions/download-artifact@v2
      with:
        name: server-container
        path: server-container
    - name: Restore server image from archive
      run: docker load -i server-container/server-container-img.tar
    - name: Download linux build artifact
      uses: actions/download-artifact@v2
      with:
        name: linux-executable
        path: linux-executable
    - name: Download mac build artifact
      uses: actions/download-artifact@v2
      with:
        name: macOS-executable
        path: macOS-executable
    - name: Download windows build artifact
      uses: actions/download-artifact@v2
      with:
        name: windows-build
        path: windows-build
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install semantic-release and plugins
      run: |
        npm install -g semantic-release@17
        npm install -g @semantic-release/exec@5
    - name: Release with semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: npx semantic-release